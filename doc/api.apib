FORMAT: 1A
HOST: http://tapnwin.ludopia.net/api

# Tap & Win API

Introduction goes here

# Group General

## Session [/sessions]

### Create [POST]

+ Request (application/json)

        {
            "email": "test@ludopia.net",
            "password": "123456"
        }

+ Response 201 (application/json)

        {
            "authToken":"XXXXXXX"
        }

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 204

## Users [/users]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

        [
            {
                "_id":"XXXXXXXXXXX",
                "firstName":"Joao",
                "lastName":"Sanchez",
                "gender": "male",
                "age": 23,
                "email": "joao@ludopia.net",
                "createdAt":"2015-12-01T17:39:22.939Z",
                "updatedAt":"2015-12-01T17:39:22.952Z"
            },
            {
                "_id":"YYYYYYYYYY",
                "firstName":"Maria",
                "lastName":"Perez",
                "gender": "female",
                "age": 21,
                "email": "maria@ludopia.net",
                "createdAt":"2015-12-01T17:39:22.939Z",
                "updatedAt":"2015-12-01T17:39:22.952Z"
            }
        ]

### Create [POST]

+ Request (application/json)

        {
            "firstName":"Joao",
            "lastName":"Sanchez",
            "gender": "male",
            "age": 23,
            "email": "joao@ludopia.net",
            "password": "123456"
        }

+ Response 201 (application/json)

        {
            "_id":"XXXXXXXXXXX",
            "firstName":"Joao",
            "lastName":"Sanchez",
            "gender": "male",
            "age": 23,
            "email": "joao@ludopia.net",
            "createdAt":"2015-12-01T17:39:22.939Z",
            "updatedAt":"2015-12-01T17:39:22.952Z"
        }

## User [/users/{user_id}]

+ Parameters
    + user_id (string) - ID of an User in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 201 (application/json)

        {
            "_id":"XXXXXXXXXXX",
            "firstName":"Joao",
            "lastName":"Sanchez",
            "gender": "male",
            "age": 23,
            "email": "joao@ludopia.net",
            "createdAt":"2015-12-01T17:39:22.939Z",
            "updatedAt":"2015-12-01T17:39:22.952Z"
        }

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 204 (application/json)

## Myself [/users/me]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 201 (application/json)

        {
            "user_id":453,
            "updated_at":"2015-12-01T17:39:22.952Z",
            "created_at":"2015-12-01T17:39:22.939Z",
            "token":"XXXXXXX"
        }

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

    + Body

            {
                "firstName":"Andres",
                "lastName":"Alvarez",
                "gender": "male",
                "age": 23,
                "email": "andres@ludopia.net",
                "password": "654321"
            }

+ Response 204 (application/json)

## My missions [/users/me/missions]

## /users/me/missions/{mission_id}

+ Parameters
    + mission_id (string) - ID of an User in the form of an ObjectId

## Companies [/companies]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

        [
            {
                "_id":"XXXXXXXXXXX",
                "name": "Levis",
                "createdAt":"2015-12-01T17:39:22.939Z",
                "updatedAt":"2015-12-01T17:39:22.952Z"
            },
            {
                "_id":"YYYYYYYYYYY",
                "name": "McDonalds",
                "createdAt":"2015-12-01T17:39:22.939Z",
                "updatedAt":"2015-12-01T17:39:22.952Z"
            }
        ]

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

    + Body

            {
                "name": "Burger King"
            }

+ Response 200 (application/json)

## Company [/companies/{company_id}]

+ Parameters
    + company_id (string) - ID of a Company in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Campaigns of a company [/companies/{company_id}/campaigns]

+ Parameters
    + company_id (string) - ID of a Company in the form of an ObjectId

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Campaigns [/campaigns]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Campaign [/campaigns/{campaign_id}]

+ Parameters
    + campaign_id (string) - ID of a Campaign in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Games [/games]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Game [/games/{game_id}]

+ Parameters
    + game_id (string) - ID of a Game in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Missions of a game [/games/{game_id}/missions]

+ Parameters
    + game_id (string) - ID of a Game in the form of an ObjectId

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Missions [/missions]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Mission [/missions/{mission_id}]

+ Parameters
    + mission_id (string) - ID of a Mission in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Status of a mission [/mission/{mission_id}/status]

+ Parameters
    + mission_id (string) - ID of a Mission in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Statuses [/statuses]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Status [/status/{status_id}]

+ Parameters
    + status_id (string) - ID of a Status in the form of an ObjectId

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

# Group Dise√±a y gana

## Designs [/designs]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Votes of a design [/designs/{design_id}/votes]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Designs of a user [/users/{user_id}/designs]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## My designs [/users/me/designs]

### Read my designs [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## My design [/users/me/designs/{design_id}]

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Categories [/categories]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Category [/categories/{category_id}]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Stickers [/stickers]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Sticker [/stickers/{sticker_id}]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Models [/models]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Model [/models/{model_id}]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [PATCH]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## Votes of a user [/users/{user_id}/votes]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## My votes [/users/me/votes]

### Read all [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Create [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

## My vote [/users/me/votes/{vote_id}]

### Read [GET]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Update [POST]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

### Delete [DELETE]

+ Request (application/json)

    + Headers

            authToken: token

+ Response 200 (application/json)

# Group Voz de la gente

# Group Match 3

# Group Due√±o de tiendas
